/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/event-handler/index.js":
/*!*********************************************!*\
  !*** ./node_modules/event-handler/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("var eventHandler = function(){\r\n    var events = {};\r\n    var suspendedEvents = {};\r\n\r\n    /**\r\n     * @param {string|array} eventName\r\n     * @param {function} callback\r\n     */\r\n    this.on = function(eventName, callback){\r\n        if(typeof(callback) != 'function'){\r\n            throw new Error('Callback must be function.');\r\n        }\r\n\r\n        if(!Array.isArray(eventName)){\r\n            eventName = [eventName];\r\n        }\r\n\r\n        for(var i = 0; i < eventName.length; i++){\r\n\r\n            var name = eventName[i];\r\n\r\n            if(this.isSuspended(name)){\r\n                suspendedEvents[name].push(callback);\r\n                continue;\r\n            }\r\n\r\n            if(!this.isActive(name)){\r\n                events[name] = [];\r\n            }\r\n\r\n            events[name].push(callback);\r\n            return this;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param  {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.isRegistered = function(eventName){\r\n        return this.isActive(eventName) || this.isSuspended(eventName);\r\n    };\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.isSuspended = function(eventName){\r\n        return typeof(suspendedEvents[eventName]) != 'undefined';\r\n    };\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.isActive = function(eventName){\r\n        return typeof(events[eventName]) != 'undefined';\r\n    };\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.remove = function(eventName){\r\n        if(this.isSuspended(eventName)){\r\n            delete suspendedEvents[eventName];\r\n            return true;\r\n        }\r\n\r\n        if(this.isActive(eventName)){\r\n            delete events[eventName];\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.suspend = function (eventName){\r\n        if(this.isActive(eventName)){\r\n            suspendedEvents[eventName] = events[eventName];\r\n            delete events[eventName];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @param {string} eventName\r\n     * @returns {boolean}\r\n     */\r\n    this.unsuspend = function (eventName){\r\n        if(this.isSuspended(eventName)){\r\n            events[eventName] = suspendedEvents[eventName];\r\n            delete suspendedEvents[eventName];\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    /**\r\n     * @param {string|array} eventName\r\n     * @param {object|array|string|int|float} data\r\n     */\r\n    this.fire = function(eventName, data){\r\n        if(!Array.isArray(data)){\r\n            data = [data];\r\n        }\r\n\r\n        if(!Array.isArray(eventName)){\r\n            eventName = [eventName];\r\n        }\r\n\r\n        for(var j = 0; j < eventName.length; j++){\r\n\r\n            var name = eventName[j];\r\n\r\n            if(!this.isActive(name)){\r\n                continue;\r\n            }\r\n\r\n            for(var i = 0; i < events[name].length; i++){\r\n                var callback = events[name][i];\r\n                callback.apply(null, data);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n};\r\n\r\n\r\nmodule.exports = eventHandler;\n\n//# sourceURL=webpack:///./node_modules/event-handler/index.js?");

/***/ }),

/***/ "./node_modules/pagination/index.js":
/*!******************************************!*\
  !*** ./node_modules/pagination/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("\r\nvar eventHandler = __webpack_require__(/*! event-handler */ \"./node_modules/event-handler/index.js\");\r\n\r\nvar pagination = function (paginationWrapper, data) {\r\n    var events = new eventHandler();\r\n\r\n    var currentPage = data.currentPage || 1;\r\n    var itemsPerPage = data.itemsPerPage || 30;\r\n    var step = data.step || 3;\r\n    var size = Math.ceil(data.totalItems / itemsPerPage);\r\n\r\n    if(typeof(data.onInit) == 'function'){\r\n        events.on('init', data.onInit);\r\n    }\r\n    if(typeof(data.onPageChanged) == 'function'){\r\n        events.on('pageChanged', data.onPageChanged);\r\n    }\r\n\r\n    var navArrows;\r\n    var numPages = size;\r\n    var firstLoad = true;\r\n\r\n    /**\r\n     * @param {function} callback\r\n     * @returns {pagination}\r\n     */\r\n    this.onPageChanged = function (callback) {\r\n        events.on('pageChanged', callback);\r\n        return this;\r\n    };\r\n\r\n    /**\r\n     * @returns {number}\r\n     */\r\n    this.getCurrentPage = function () {\r\n        return currentPage;\r\n    };\r\n\r\n\r\n    this.getPrevPage = function () {\r\n        if (currentPage > 1) {\r\n            return currentPage--;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    this.getNextPage = function () {\r\n        if (currentPage < numPages) {\r\n            return currentPage++\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    var paginationContainer = function (paginationWrapper) {\r\n        var template = [\r\n            '<a class=\"arrowLeft\">&#9668;</a>',     // previous\r\n            '<span></span>',                        // pagination container\r\n            '<a class=\"arrowRight\">&#9658;</a>'     // next\r\n        ];\r\n        paginationWrapper.innerHTML = template.join('');\r\n    };\r\n\r\n    var arrows = function (paginationWrapper) {\r\n        navArrows = paginationWrapper.getElementsByTagName('a');\r\n        navArrows[0].addEventListener('click', function () {\r\n            prevPage(paginationWrapper);\r\n        }, false);\r\n        navArrows[1].addEventListener('click', function () {\r\n            nextPage(paginationWrapper);\r\n        }, false);\r\n    };\r\n\r\n    var prevPage = function (paginationWrapper) {\r\n        if (currentPage > 1) {\r\n            currentPage--;\r\n            changeContent(paginationWrapper);\r\n        }\r\n    };\r\n\r\n    var nextPage = function (paginationWrapper) {\r\n        if (currentPage < numPages) {\r\n            currentPage++;\r\n            changeContent(paginationWrapper);\r\n        }\r\n    };\r\n\r\n    var changeContent = function (paginationWrapper) {\r\n\r\n        if(firstLoad == false){\r\n            events.fire('pageChanged', [currentPage]);\r\n        }\r\n\r\n        if(firstLoad == true){\r\n            firstLoad = false;\r\n        }\r\n\r\n        var pageNumbersWrapper = paginationWrapper.getElementsByTagName('span')[0];\r\n        pageNumbersWrapper.innerHTML = paginationTemplate();\r\n        attachPageEvents(paginationWrapper, pageNumbersWrapper.getElementsByTagName('a'));\r\n    };\r\n\r\n    var attachPageEvents = function (paginationWrapper, pageLinks) {\r\n        for(var i = 0; i < pageLinks.length; i++){\r\n            pageLinks[i].addEventListener('click', function(){\r\n                currentPage = this.innerText;\r\n                changeContent(paginationWrapper);\r\n            }, false);\r\n        }\r\n    };\r\n\r\n    var paginationTemplate = function () {\r\n        var template = '';\r\n        var elementsToShow = step * 2;\r\n\r\n        var add = {\r\n            pageNum : function(start, end){\r\n                for(var i = start; i <= end; ++i){\r\n                    if(i == currentPage){\r\n                        template += '<a class=\"current pagNumber\">' + i + '</a>';\r\n                    }else{\r\n                        template += '<a class=\"pagNumber\">' + i + '</a>';\r\n                    }\r\n                }\r\n            },\r\n            startDots: function () {\r\n                // add first currentPage with separator\r\n                template += '<a class=\"pagNumber\">1</a><i class=\"pagDots\">...</i>';\r\n            },\r\n\r\n            endDots: function () {\r\n                template += '<i class=\"pagDots\">...</i><a class=\"pagNumber\">' + numPages + '</a>';\r\n            }\r\n        };\r\n\r\n        if(elementsToShow >= numPages){\r\n            add.pageNum(1, numPages);\r\n        }else {\r\n            if(currentPage < elementsToShow){\r\n                add.pageNum(1, elementsToShow);\r\n                add.endDots();\r\n            }else if(currentPage > numPages - elementsToShow){\r\n                add.startDots();\r\n                add.pageNum(numPages - elementsToShow, numPages);\r\n            }else{\r\n                add.startDots();\r\n                add.pageNum(currentPage - step, parseInt(currentPage) + parseInt(step));\r\n                add.endDots();\r\n            }\r\n        }\r\n        return template;\r\n    };\r\n\r\n    var createPagination = function (paginationWrapper) {\r\n        paginationContainer(paginationWrapper);\r\n        arrows(paginationWrapper);\r\n        changeContent(paginationWrapper);\r\n    };\r\n\r\n    createPagination(paginationWrapper);\r\n    events.fire('init', currentPage);\r\n};\r\n\r\nmodule.exports = pagination;\r\n\n\n//# sourceURL=webpack:///./node_modules/pagination/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var pagination = __webpack_require__(/*! pagination */ \"./node_modules/pagination/index.js\");\r\n\r\n(function(window, document) {\r\n\r\n  // ---------------------------- Changeable variables start ---------------------------- //\r\n\r\n  let logging = false;\r\n  const apiUrl = \"https://jobs.dev.services.jtech.se/\";\r\n  const scriptDomain = getScriptURL().split('script/AfPbWidget.js')[0];\r\n  const scriptsUrl = scriptDomain + \"/script/\";\r\n  const cssUrl = scriptDomain + \"/css/\";\r\n  const lang = 'sv'  // en or sv\r\n\r\n  // ---------------------------- Changable variables end ---------------------------- //\r\n\r\n  let afw, pag1;\r\n  const ApiLimit = 2000;\r\n\r\n  // ---------------------------- Helper functions start ---------------------------- //\r\n\r\n  /**\r\n   * Will console log a array of function trace and value of passed variable \"log\"\r\n   * @param {*} log - can be string, array or object\r\n   */\r\n  function l(log) \r\n  {\r\n    if(logging)\r\n    {\r\n      var stack;\r\n  \r\n      try \r\n      {\r\n        throw new Error('');\r\n      }\r\n      catch (error) \r\n      {\r\n        stack = error.stack || '';\r\n      }\r\n    \r\n      stack = stack.split('\\n').map(function (line) { return line.trim(); });\r\n      stack.push(numOfChar('-',log.length));\r\n      stack.push(log);\r\n      stack.reverse();\r\n      console.log(stack.slice(0, -2));\r\n    }\r\n  }\r\n  \r\n  function numOfChar(char,count) \r\n  {\r\n    var str='';\r\n    var i = 0;\r\n    do {\r\n      i++;\r\n      str += char;\r\n    } while (i < count);\r\n    return str;\r\n  }\r\n\r\n  function getScriptURL() \r\n  {\r\n    // IE don't support currentScript, solution = querySelector\r\n    var script =  document.currentScript || document.querySelector('script[src*=\"AfPbWidget.js\"]')\r\n    l('loaded script:' + script.src );\r\n    return script.src\r\n  }\r\n\r\n  function getStylesheet(url) \r\n  {\r\n    var linkElement = document.createElement(\"link\");\r\n    linkElement.href = url;\r\n    linkElement.rel = \"stylesheet\";\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n      done = false;\r\n    // Attach handlers for all browsers\r\n    linkElement.onload = linkElement.onreadystatechange = function() \r\n    {\r\n      if (\r\n        !done &&\r\n        (!this.readyState ||\r\n          this.readyState == \"loaded\" ||\r\n          this.readyState == \"complete\")\r\n      ) {\r\n        done = true;\r\n        //success();\r\n        l('loaded css:' + url);\r\n        linkElement.onload = linkElement.onreadystatechange = null;\r\n        // head.removeChild(linkElement);\r\n      }\r\n    };\r\n    head.appendChild(linkElement);\r\n  }\r\n\r\n  function getScript(url, success) \r\n  {\r\n    var script = document.createElement(\"script\");\r\n    script.src = url;\r\n    var head = document.getElementsByTagName(\"head\")[0],\r\n      done = false;\r\n    // Attach handlers for all browsers\r\n    script.onload = script.onreadystatechange = function() \r\n    {\r\n      if (\r\n        !done &&\r\n        (!this.readyState ||\r\n          this.readyState == \"loaded\" ||\r\n          this.readyState == \"complete\")\r\n      ) {\r\n        done = true;\r\n        success();\r\n        l('Loaded script:' + url);\r\n        script.onload = script.onreadystatechange = null;\r\n        head.removeChild(script);\r\n      }\r\n    };\r\n    head.appendChild(script);\r\n  }\r\n\r\n  function delay() \r\n  {\r\n    return new Promise(resolve => setTimeout(resolve, 1300));\r\n  }\r\n\r\n  function ajax_get(url, callback) \r\n  {\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"GET\", url, true);\r\n    request.onreadystatechange = function() \r\n    {\r\n      if (request.readyState == 4 && request.status == 200) \r\n      {\r\n        try \r\n        {\r\n          var data = JSON.parse(request.responseText);\r\n        } \r\n        catch(err) \r\n        {\r\n          console.log(err.message + \" in \" + request.responseText);\r\n          return;\r\n        }\r\n        callback(data);\r\n      }\r\n    };\r\n \r\n    request.open(\"GET\", url, true);\r\n    if(url.search('jtech.se/open/search') > 1 || url.search('/vf/') > 1) \r\n    {\r\n      l('AfJobs headers set for:' + url);\r\n      request.setRequestHeader(\"api-key\", \"apa\");\r\n    } \r\n    else \r\n    {\r\n      l('AllJobs headers set for: ' + url );\r\n      request.setRequestHeader(\"api-key\", \"am9ic2Nhbm5lckBqdGVjaC5zZQo\");\r\n    }\r\n    request.send();\r\n  }\r\n\r\n  function checkImageExists(imageUrl, callBack) \r\n  {\r\n    var imageData = new Image();\r\n    imageData.onload = function() \r\n    {\r\n      callBack(true);\r\n    };\r\n    imageData.onerror = function() \r\n    {\r\n      callBack(false);\r\n    };\r\n    imageData.src = imageUrl;\r\n  }\r\n\r\n  function i18n(template) \r\n  {\r\n    for (var\r\n      info = i18n.db[i18n.locale][template.join('\\x01')],\r\n      out = [info.t[0]],\r\n      i = 1, length = info.t.length; i < length; i++\r\n    ) out[i] = arguments[1 + info.v[i - 1]] + info.t[i];\r\n    return out.join('');\r\n  }\r\n  i18n.locale = lang;\r\n  i18n.db = {};\r\n  \r\n  i18n.set = locale => (tCurrent, ...rCurrent) => {\r\n    const key = tCurrent.join('\\x01');\r\n    let db = i18n.db[locale] || (i18n.db[locale] = {});\r\n    db[key] = {\r\n      t: tCurrent.slice(),\r\n      v: rCurrent.map((value, i) => i)\r\n    };\r\n    const config = {\r\n      for: other => (tOther, ...rOther) => {\r\n        db = i18n.db[other] || (i18n.db[other] = {});\r\n        db[key] = {\r\n          t: tOther.slice(),\r\n          v: rOther.map((value, i) => rCurrent.indexOf(value))\r\n        };\r\n        return config;\r\n      }\r\n    };\r\n    return config;\r\n  };\r\n  \r\n  // .for('sv')`Hallo ${'name'}`; example with variable\r\n  i18n.set('en')`Apply`\r\n      .for('sv')`Ansök`;\r\n\r\n  function createE(e, c = '', i = '') \r\n  {\r\n    var r = document.createElement(e);\r\n    r.className = c;\r\n    r.innerHTML = i;\r\n    return r;\r\n  }\r\n\r\n  async function ApiUrl(cont, page, callback)\r\n  {\r\n      // defaults \r\n      var limit = 5;\r\n      var offset = 0;\r\n      var showexpired = false;\r\n      var q = '';\r\n      var places = '';\r\n      var httpRequestString = apiUrl;\r\n\r\n      if(page > 1 ) {\r\n        offset = (page * limit) - limit;\r\n      }\r\n\r\n      // fetch from container\r\n      if(cont.dataset.limit) { limit = cont.dataset.limit; }\r\n      if(cont.dataset.showexpired) { showexpired = cont.dataset.showexpired; }\r\n      if(cont.dataset.q) { q = cont.dataset.q; }\r\n      if(cont.dataset.source != \"all\")\r\n      {\r\n        httpRequestString += 'open/'; \r\n        if(cont.dataset.places) \r\n        { \r\n          var search = cont.dataset.places.split(',');\r\n          const response = search.map(fetchLocationId);\r\n      \r\n          Promise.all(response).then(places => {\r\n            places = places.join('&municipality='); \r\n            httpRequestString += \"search?q=\" + q +\r\n            \"&municipality=\" + places +\r\n            \"&offset=\" + offset +\r\n            \"&limit=\" + limit;\r\n            callback(httpRequestString);\r\n\r\n          });      \r\n        }\r\n      } else {\r\n        if(cont.dataset.places) \r\n        { \r\n          places = cont.dataset.places.split(',').join('&place=');\r\n          httpRequestString += \"search?show-expired=\" + showexpired +\r\n          \"&q=\" + q +\r\n          \"&place=\" + places +\r\n          \"&offset=\" + offset +\r\n          \"&limit=\" + limit;\r\n          callback(httpRequestString);\r\n\r\n        }\r\n      }\r\n  }\r\n\r\n  function toHttps(url) \r\n  {\r\n    return url.replace('http:', 'https:');\r\n  }\r\n\r\n  function addAdListener(query, call) \r\n  {\r\n    [].forEach.call( document.querySelectorAll( query ), function ( e ) \r\n    {\r\n      e.addEventListener( 'click', function (event) \r\n      {\r\n        event.preventDefault();\r\n        fnCall(call, e);\r\n      }, false );\r\n    });\r\n  }\r\n\r\n  function fnCall(fn, ...args)\r\n  {\r\n    let func = (typeof fn ==\"string\")?window[fn]:fn;\r\n    if (typeof func == \"function\") func(...args)\r\n    else console.error(`${fn} is Not a function!`);\r\n  }\r\n\r\n  function addClass(e, c) \r\n  {\r\n    if (e.classList) \r\n    { \r\n      e.classList.add(c);\r\n    } \r\n    else \r\n    {\r\n      arr = e.className.split(\" \");\r\n      if (arr.indexOf(c) == -1) \r\n      {\r\n        e.className += \" \" + c;\r\n      }\r\n    }    \r\n  }\r\n\r\n  function removeClass(e,c) \r\n  {\r\n    if (e.classList) \r\n    { \r\n      e.classList.remove(c);\r\n    } \r\n    else \r\n    {\r\n      e.className = e.className.replace(/\\b\"+ c +\"\\b/g, \"\");\r\n    }\r\n  }\r\n\r\n  function fetchLocationId(s) \r\n  {\r\n    url = 'https://jobs.dev.services.jtech.se/vf/search?offset=0&limit=10&type=municipality&show-count=false&q=' + s;\r\n    return new Promise(resolve => ajax_get(url, function(response)\r\n    {\r\n      var places = [];\r\n      municipalies = response.result;\r\n      municipalies.forEach(function(municipality)\r\n      {\r\n        places.push(municipality.id);\r\n      })\r\n      resolve(places);\r\n    }));\r\n  }\r\n\r\n\t// ---------------------------- Helper functions end ---------------------------- //\r\n\r\n  document.addEventListener(\"DOMContentLoaded\", function(event) { \r\n    \r\n    // don't add widget if it exists\r\n    var widget =  document.getElementById(\"afModalWrapper\");\r\n    if (widget != undefined) {\r\n      return false;\r\n    }\r\n    \r\n    l('document loaded');\r\n    afw = document.getElementById(\"afWidgetContainer\");\r\n    if(afw == undefined) {\r\n      throw new Error(\"can't find container for widget\");\r\n    }\r\n\r\n    getStylesheet(cssUrl + \"AfPbWidget.css\");\r\n    getStylesheet(\"https://fonts.googleapis.com/css?family=Open+Sans:400,400i,600,600i,700,700i,800\");\r\n\r\n    var afJobCount = document.getElementById(\"afJobCount\");\r\n    if (afJobCount != undefined) {\r\n\r\n      // counter could be empty or have own values\r\n      var cont = afJobCount;\r\n      if(\r\n        afJobCount.dataset.q == undefined && \r\n        afJobCount.dataset.showexpired == undefined && \r\n        afJobCount.dataset.places == undefined\r\n        ) {\r\n        cont = afw;          \r\n      }\r\n      ApiUrl(cont, 0, function(url) {\r\n        ajax_get(url, function(annonsdata) {\r\n          var total = parseTotal(annonsdata).toString().split('');\r\n          afJobCount.innerHTML = '';\r\n          total.forEach(function(num) {\r\n            var el = createE(\"span\", \"letter\", num);\r\n            afJobCount.appendChild(el);\r\n  \r\n          });\r\n        })\r\n        /*\r\n        .fail(function() {\r\n          $afJobCount.html(\"Missing data\");\r\n          console.log(\"Couldn't get job ad from remote service\");\r\n        });\r\n        */  \r\n\r\n      });     \r\n\r\n    }\r\n\r\n    var wrapper = createE(\"div\");\r\n    wrapper.id = \"afModalWrapper\";\r\n    wrapper.innerHTML = `<div id='afModal' class='afmodal' style='display: none'>\r\n        <a href=\"#close-modal\" class=\"close-modal \">Close</a>\r\n        <div id=\"afmodalContent\">\r\n          <div class='afmodal-header afRow'>\r\n              <h2>Här har du jobben</h2>\r\n          </div>\r\n          <div class='afRow' >\r\n              <div id='afListContent' class=\"afListContent\">\r\n                  <div class=\"afTable\">\r\n                      <div id=\"afAnnonsTableBody\" >\r\n                          <!-- generated rows will go here-->\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n              <div class=\"afPaginationWrapper\">\r\n                  <div class=\"afPagination\"></div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>`;\r\n    document.body.appendChild(wrapper);\r\n\r\n    // build header \r\n    var t = document.querySelector(\"#afmodalContent h2\");\r\n    t.innerText = 'Jobbannonser ';\r\n    if(afw.dataset.q) {\r\n      var q = document.createElement('span');\r\n      q.className = 'afSelected';\r\n      q.innerText = afw.dataset.q;\r\n      t.innerHTML = 'Annonser för ';\r\n      t.appendChild(q);\r\n    }\r\n\r\n    if(afw.dataset.places) {\r\n      var p = document.createElement('span');\r\n      p.className = 'afSelected';\r\n      p.innerText = afw.dataset.places;\r\n      t.innerHTML += ' att söka i ';\r\n      t.appendChild(p);\r\n\r\n    }\r\n\r\n    afw.onclick = function() \r\n    {\r\n      addClass(wrapper,\"blocker\");\r\n      wrapper.firstChild.setAttribute(\"style\", \"display: inline-block\");\r\n      getAds(1);\r\n    };\r\n\r\n    // close modal. \r\n    addAdListener(\".close-modal\", function(e) \r\n    {\r\n      removeClass(wrapper, \"blocker\");\r\n      wrapper.firstChild.setAttribute(\"style\", \"display: none\");\r\n    });\r\n\r\n  });\r\n\r\n  function parseTotal(annonsdata) {\r\n    l(annonsdata);\r\n    var total = '';\r\n    if(annonsdata.total != undefined) \r\n    {\r\n      return annonsdata.total;\r\n    } \r\n    else \r\n    {\r\n      return annonsdata.antal_platsannonser;\r\n    }\r\n  }\r\n\r\n  var addAdRow = function(annons) \r\n  {\r\n    // move af data to be work as alljobs\r\n    if(afw.dataset.source != \"all\") {\r\n        annons.header = annons.annons.annonsrubrik;\r\n        annons.employer = {\r\n          'name': annons.arbetsplats.arbetsplatsnamn\r\n        };\r\n        annons.location = '';\r\n        if(annons.arbetsplats.postadress) {\r\n          annons.location += annons.arbetsplats.postadress;\r\n        }\r\n        if(\r\n          annons.arbetsplats.postort && \r\n          annons.location.search(annons.arbetsplats.postort) < 1\r\n          ) {\r\n          if(annons.location.length > 0) {\r\n            annons.location += ', ';\r\n          }\r\n          annons.location += annons.arbetsplats.postort;\r\n        }\r\n        annons.application = {\r\n          'site': {\r\n            'url': annons.annons.annons_url\r\n          },\r\n          'deadline': annons.ansokan.sista_ansokningsdag\r\n        };\r\n\r\n        annons.markup = annons.annons.annonstext;\r\n    }\r\n\r\n    l(annons);\r\n    \r\n    // wrapper\r\n    var newRow = createE(\"div\", \"afTableRow\");\r\n    newRow.id = annons.id;    \r\n\r\n    var cell = createE(\"div\", \"afTableCell\");\r\n    var row = createE(\"div\", \"afRow\");\r\n\r\n    // header\r\n    var adheadElement = createE(\"h3\",'',annons.header);\r\n    var jobplaceElement = createE(\"div\", \"afJobplace\");\r\n    // below header\r\n    if (annons.employer.name != undefined) \r\n    {\r\n        jobplaceElement.innerHTML = annons.employer.name + \", \";\r\n    }\r\n    jobplaceElement.innerHTML += annons.location;\r\n    row.appendChild(adheadElement);\r\n\r\n    if (annons.application.deadline != undefined) \r\n    {\r\n        var date = new Date(annons.application.deadline).toLocaleDateString(undefined, {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric'\r\n        })\r\n        var deadline = createE(\"span\", \"afDeadline\", \"Sista ansökningsdagen: \" + date);\r\n        row.appendChild(deadline);\r\n    }\r\n    row.appendChild(jobplaceElement);\r\n\r\n    if (annons.employer.logoUrl) \r\n    {\r\n      var logoUrl = toHttps(annons.employer.logoUrl);\r\n      checkImageExists(logoUrl, function(existsImage) \r\n      {\r\n        if(existsImage == true) \r\n        {\r\n          var logoElement = createE(\"img\", \"afListlogo\");\r\n          logoElement.src = logoUrl;\r\n          row.prepend(logoElement);\r\n        }\r\n        else \r\n        {\r\n          // image not exist\r\n        }\r\n      });\r\n    }\r\n    // more info\r\n    var readMore = createE(\"div\", \"afReadMore\");\r\n    var close = createE(\"a\",\"afAdClose\",\"Stäng\");\r\n    readMore.appendChild(close);\r\n    var content = createE(\"article\", \"afAdText\", annons.markup);\r\n    readMore.appendChild(content);\r\n\r\n    var url = '';\r\n    if(annons.application.site.url) \r\n    {\r\n      url = annons.application.site.url;\r\n    } \r\n    else if(annons.sources != undefined && annons.sources[0].url) \r\n    {\r\n      url = annons.sources[0].url;\r\n    }\r\n    \r\n    if(url.length > 1) \r\n    {\r\n      var applyLink = createE(\"a\", \"afApply\");\r\n      applyLink.href = url;\r\n      applyLink.target = '_blank';\r\n      applyLink.text = i18n`Apply`;\r\n      readMore.appendChild(applyLink);\r\n    }\r\n    if(annons.sista_ansokningsdag) \r\n    {\r\n      left.appendChild(dateElement);\r\n    }\r\n    cell.appendChild(row);\r\n    cell.appendChild(readMore);\r\n    newRow.appendChild(cell);\r\n    return newRow;\r\n\r\n  }\r\n\r\n  async function getAds(page) \r\n  {\r\n    //TODO: Show waiting gif while fetching data\r\n    ApiUrl(afw, page, function(url) \r\n    {\r\n      ajax_get(url, function(annonsdata) \r\n      {\r\n        var total = parseTotal(annonsdata);\r\n        if(total > ApiLimit)\r\n        {\r\n          total = ApiLimit;\r\n        }\r\n\r\n        if(pag1 == undefined)\r\n        {\r\n          l('pagination inizialised');\r\n          pag1 = new pagination(document.getElementsByClassName('afPagination')[0],\r\n            {\r\n              currentPage: 1,\t                  \t// number\r\n              totalItems: total,                  // number\r\n              itemsPerPage: afw.dataset.limit,    // number\r\n              step: 2,\t\t\t                      // number\r\n              onInit: getAds\t                    // function\r\n            }\r\n          );\r\n          pag1.onPageChanged(getAds);\r\n        }\r\n\r\n        var annonsTableBody = document.getElementById(\"afAnnonsTableBody\");\r\n        annonsTableBody.innerHTML= '';\r\n\r\n        var annonser = {};\r\n        if(annonsdata.hits)\r\n        {\r\n          annonser = annonsdata.hits;\r\n        }\r\n        else \r\n        {\r\n          annonser = annonsdata.platsannonser;\r\n        }\r\n        annonser.forEach(function(annons) \r\n        {\r\n          annonsTableBody.appendChild(addAdRow(annons));\r\n        });\r\n\r\n        // ad opener\r\n        addAdListener(\".afTableRow h3\", function(e) \r\n        {\r\n          document.querySelectorAll(\".afTableCell\").forEach(function (e) \r\n          {\r\n            removeClass(e, \"opened\");\r\n          });\r\n          e.parentNode.parentNode.className += \" opened\";   \r\n        });\r\n\r\n        // ad closer\r\n        addAdListener(\".afAdClose\", function() \r\n        {\r\n          document.querySelectorAll(\".afTableCell\").forEach(function (e) \r\n          {\r\n            removeClass(e, \"opened\");\r\n          });\r\n        });\r\n        \r\n      })\r\n      /*\r\n      .fail(function() {\r\n        console.log(\"Couldn't get job ad from remote service\");\r\n      });\r\n      */\r\n    });\r\n  }\r\n})(window, document);\r\n\r\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });